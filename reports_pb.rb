# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: reports.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("reports.proto", :syntax => :proto3) do
    add_message "Trace" do
      optional :start_time, :message, 4, "google.protobuf.Timestamp"
      optional :end_time, :message, 3, "google.protobuf.Timestamp"
      optional :duration_ns, :uint64, 11
      optional :root, :message, 14, "Trace.Node"
      optional :signature, :string, 19
      optional :details, :message, 6, "Trace.Details"
      optional :client_name, :string, 7
      optional :client_version, :string, 8
      optional :client_address, :string, 9
      optional :client_reference_id, :string, 23
      optional :http, :message, 10, "Trace.HTTP"
      optional :cache_policy, :message, 18, "Trace.CachePolicy"
      optional :query_plan, :message, 26, "Trace.QueryPlanNode"
      optional :full_query_cache_hit, :bool, 20
      optional :persisted_query_hit, :bool, 21
      optional :persisted_query_register, :bool, 22
      optional :registered_operation, :bool, 24
      optional :forbidden_operation, :bool, 25
      optional :origin_reported_start_time, :message, 15, "google.protobuf.Timestamp"
      optional :origin_reported_end_time, :message, 16, "google.protobuf.Timestamp"
      optional :origin_reported_duration_ns, :uint64, 17
      optional :legacy_signature_needs_resigning, :string, 5
    end
    add_message "Trace.CachePolicy" do
      optional :scope, :enum, 1, "Trace.CachePolicy.Scope"
      optional :max_age_ns, :int64, 2
    end
    add_enum "Trace.CachePolicy.Scope" do
      value :UNKNOWN, 0
      value :PUBLIC, 1
      value :PRIVATE, 2
    end
    add_message "Trace.Details" do
      map :variables_json, :string, :string, 4
      map :variables, :string, :bytes, 1
      optional :raw_query, :string, 2
      optional :operation_name, :string, 3
    end
    add_message "Trace.Error" do
      optional :message, :string, 1
      repeated :location, :message, 2, "Trace.Location"
      optional :time_ns, :uint64, 3
      optional :json, :string, 4
    end
    add_message "Trace.HTTP" do
      optional :method, :enum, 1, "Trace.HTTP.Method"
      optional :host, :string, 2
      optional :path, :string, 3
      map :request_headers, :string, :message, 4, "Trace.HTTP.Values"
      map :response_headers, :string, :message, 5, "Trace.HTTP.Values"
      optional :status_code, :uint32, 6
      optional :secure, :bool, 8
      optional :protocol, :string, 9
    end
    add_message "Trace.HTTP.Values" do
      repeated :value, :string, 1
    end
    add_enum "Trace.HTTP.Method" do
      value :UNKNOWN, 0
      value :OPTIONS, 1
      value :GET, 2
      value :HEAD, 3
      value :POST, 4
      value :PUT, 5
      value :DELETE, 6
      value :TRACE, 7
      value :CONNECT, 8
      value :PATCH, 9
    end
    add_message "Trace.Location" do
      optional :line, :uint32, 1
      optional :column, :uint32, 2
    end
    add_message "Trace.Node" do
      optional :original_field_name, :string, 14
      optional :type, :string, 3
      optional :parent_type, :string, 13
      optional :cache_policy, :message, 5, "Trace.CachePolicy"
      optional :start_time, :uint64, 8
      optional :end_time, :uint64, 9
      repeated :error, :message, 11, "Trace.Error"
      repeated :child, :message, 12, "Trace.Node"
      oneof :id do
        optional :response_name, :string, 1
        optional :index, :uint32, 2
      end
    end
    add_message "Trace.QueryPlanNode" do
      oneof :node do
        optional :sequence, :message, 1, "Trace.QueryPlanNode.SequenceNode"
        optional :parallel, :message, 2, "Trace.QueryPlanNode.ParallelNode"
        optional :fetch, :message, 3, "Trace.QueryPlanNode.FetchNode"
        optional :flatten, :message, 4, "Trace.QueryPlanNode.FlattenNode"
      end
    end
    add_message "Trace.QueryPlanNode.SequenceNode" do
      repeated :nodes, :message, 1, "Trace.QueryPlanNode"
    end
    add_message "Trace.QueryPlanNode.ParallelNode" do
      repeated :nodes, :message, 1, "Trace.QueryPlanNode"
    end
    add_message "Trace.QueryPlanNode.FetchNode" do
      optional :serviceName, :string, 1
      optional :traceParsingFailed, :bool, 2
      optional :trace, :message, 3, "Trace"
      optional :sent_time_offset, :uint64, 4
      optional :sent_time, :message, 5, "google.protobuf.Timestamp"
      optional :received_time, :message, 6, "google.protobuf.Timestamp"
    end
    add_message "Trace.QueryPlanNode.FlattenNode" do
      repeated :response_path, :message, 1, "Trace.QueryPlanNode.ResponsePathElement"
      optional :node, :message, 2, "Trace.QueryPlanNode"
    end
    add_message "Trace.QueryPlanNode.ResponsePathElement" do
      oneof :id do
        optional :field_name, :string, 1
        optional :index, :uint32, 2
      end
    end
    add_message "ReportHeader" do
      optional :service, :string, 3
      optional :hostname, :string, 5
      optional :agent_version, :string, 6
      optional :service_version, :string, 7
      optional :runtime_version, :string, 8
      optional :uname, :string, 9
      optional :schema_tag, :string, 10
      optional :schema_hash, :string, 11
    end
    add_message "PathErrorStats" do
      map :children, :string, :message, 1, "PathErrorStats"
      optional :errors_count, :uint64, 4
      optional :requests_with_errors_count, :uint64, 5
    end
    add_message "ClientNameStats" do
      repeated :latency_count, :int64, 1
      map :requests_count_per_version, :string, :uint64, 3
      map :cache_hits_per_version, :string, :uint64, 4
      map :persisted_query_hits_per_version, :string, :uint64, 10
      map :persisted_query_misses_per_version, :string, :uint64, 11
      map :registered_operation_count_per_version, :string, :uint64, 12
      map :forbidden_operation_count_per_version, :string, :uint64, 13
      repeated :cache_latency_count, :int64, 5
      optional :root_error_stats, :message, 6, "PathErrorStats"
      optional :requests_with_errors_count, :uint64, 7
      repeated :public_cache_ttl_count, :int64, 8
      repeated :private_cache_ttl_count, :int64, 9
    end
    add_message "QueryLatencyStats" do
      repeated :latency_count, :int64, 1
      optional :request_count, :uint64, 2
      optional :cache_hits, :uint64, 3
      optional :persisted_query_hits, :uint64, 4
      optional :persisted_query_misses, :uint64, 5
      repeated :cache_latency_count, :int64, 6
      optional :root_error_stats, :message, 7, "PathErrorStats"
      optional :requests_with_errors_count, :uint64, 8
      repeated :public_cache_ttl_count, :int64, 9
      repeated :private_cache_ttl_count, :int64, 10
      optional :registered_operation_count, :uint64, 11
      optional :forbidden_operation_count, :uint64, 12
    end
    add_message "StatsContext" do
      optional :client_reference_id, :string, 1
      optional :client_name, :string, 2
      optional :client_version, :string, 3
    end
    add_message "ContextualizedQueryLatencyStats" do
      optional :query_latency_stats, :message, 1, "QueryLatencyStats"
      optional :context, :message, 2, "StatsContext"
    end
    add_message "ContextualizedTypeStats" do
      optional :context, :message, 1, "StatsContext"
      map :per_type_stat, :string, :message, 2, "TypeStat"
    end
    add_message "FieldStat" do
      optional :name, :string, 2
      optional :return_type, :string, 3
      optional :errors_count, :uint64, 4
      optional :count, :uint64, 5
      optional :requests_with_errors_count, :uint64, 6
      repeated :latency_count, :int64, 8
    end
    add_message "TypeStat" do
      optional :name, :string, 1
      repeated :field, :message, 2, "FieldStat"
      map :per_field_stat, :string, :message, 3, "FieldStat"
    end
    add_message "QueryStats" do
      map :per_client_name, :string, :message, 1, "ClientNameStats"
      repeated :query_stats_with_context, :message, 4, "ContextualizedQueryLatencyStats"
      repeated :per_type, :message, 2, "TypeStat"
      map :per_type_stat, :string, :message, 3, "TypeStat"
      repeated :type_stats_with_context, :message, 5, "ContextualizedTypeStats"
    end
    add_message "TracesReport" do
      optional :header, :message, 1, "ReportHeader"
      repeated :trace, :message, 2, "Trace"
    end
    add_message "Field" do
      optional :name, :string, 2
      optional :return_type, :string, 3
    end
    add_message "Type" do
      optional :name, :string, 1
      repeated :field, :message, 2, "Field"
    end
    add_message "MemStats" do
      optional :total_bytes, :uint64, 1
      optional :stack_bytes, :uint64, 2
      optional :heap_bytes, :uint64, 3
      optional :heap_released_bytes, :uint64, 13
      optional :gc_overhead_bytes, :uint64, 4
      optional :stack_used_bytes, :uint64, 5
      optional :heap_allocated_bytes, :uint64, 6
      optional :heap_allocated_objects, :uint64, 7
      optional :heap_allocated_bytes_delta, :uint64, 8
      optional :heap_allocated_objects_delta, :uint64, 9
      optional :heap_freed_objects_delta, :uint64, 10
      optional :gc_stw_ns_delta, :uint64, 11
      optional :gc_count_delta, :uint64, 12
    end
    add_message "TimeStats" do
      optional :uptime_ns, :uint64, 1
      optional :real_ns_delta, :uint64, 2
      optional :user_ns_delta, :uint64, 3
      optional :sys_ns_delta, :uint64, 4
    end
    add_message "StatsReport" do
      optional :header, :message, 1, "ReportHeader"
      optional :mem_stats, :message, 2, "MemStats"
      optional :time_stats, :message, 3, "TimeStats"
      optional :start_time, :message, 8, "google.protobuf.Timestamp"
      optional :end_time, :message, 9, "google.protobuf.Timestamp"
      optional :realtime_duration, :uint64, 10
      map :per_query, :string, :message, 14, "QueryStats"
      map :legacy_per_query_implicit_operation_name, :string, :message, 12, "QueryStats"
      repeated :type, :message, 13, "Type"
    end
    add_message "FullTracesReport" do
      optional :header, :message, 1, "ReportHeader"
      map :traces_per_query, :string, :message, 5, "Traces"
    end
    add_message "Traces" do
      repeated :trace, :message, 1, "Trace"
    end
    add_message "TraceV1" do
      optional :header, :message, 1, "ReportHeader"
      optional :trace, :message, 2, "Trace"
    end
  end
end

Trace = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace").msgclass
Trace::CachePolicy = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.CachePolicy").msgclass
Trace::CachePolicy::Scope = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.CachePolicy.Scope").enummodule
Trace::Details = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.Details").msgclass
Trace::Error = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.Error").msgclass
Trace::HTTP = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.HTTP").msgclass
Trace::HTTP::Values = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.HTTP.Values").msgclass
Trace::HTTP::Method = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.HTTP.Method").enummodule
Trace::Location = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.Location").msgclass
Trace::Node = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.Node").msgclass
Trace::QueryPlanNode = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.QueryPlanNode").msgclass
Trace::QueryPlanNode::SequenceNode = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.QueryPlanNode.SequenceNode").msgclass
Trace::QueryPlanNode::ParallelNode = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.QueryPlanNode.ParallelNode").msgclass
Trace::QueryPlanNode::FetchNode = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.QueryPlanNode.FetchNode").msgclass
Trace::QueryPlanNode::FlattenNode = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.QueryPlanNode.FlattenNode").msgclass
Trace::QueryPlanNode::ResponsePathElement = Google::Protobuf::DescriptorPool.generated_pool.lookup("Trace.QueryPlanNode.ResponsePathElement").msgclass
ReportHeader = Google::Protobuf::DescriptorPool.generated_pool.lookup("ReportHeader").msgclass
PathErrorStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("PathErrorStats").msgclass
ClientNameStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("ClientNameStats").msgclass
QueryLatencyStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("QueryLatencyStats").msgclass
StatsContext = Google::Protobuf::DescriptorPool.generated_pool.lookup("StatsContext").msgclass
ContextualizedQueryLatencyStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("ContextualizedQueryLatencyStats").msgclass
ContextualizedTypeStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("ContextualizedTypeStats").msgclass
FieldStat = Google::Protobuf::DescriptorPool.generated_pool.lookup("FieldStat").msgclass
TypeStat = Google::Protobuf::DescriptorPool.generated_pool.lookup("TypeStat").msgclass
QueryStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("QueryStats").msgclass
TracesReport = Google::Protobuf::DescriptorPool.generated_pool.lookup("TracesReport").msgclass
Field = Google::Protobuf::DescriptorPool.generated_pool.lookup("Field").msgclass
Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("Type").msgclass
MemStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("MemStats").msgclass
TimeStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("TimeStats").msgclass
StatsReport = Google::Protobuf::DescriptorPool.generated_pool.lookup("StatsReport").msgclass
FullTracesReport = Google::Protobuf::DescriptorPool.generated_pool.lookup("FullTracesReport").msgclass
Traces = Google::Protobuf::DescriptorPool.generated_pool.lookup("Traces").msgclass
TraceV1 = Google::Protobuf::DescriptorPool.generated_pool.lookup("TraceV1").msgclass
